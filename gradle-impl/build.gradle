


usePlugin('groovy')

sourceCompatibility = 1.5
targetCompatibility = 1.5
version = '0.6'
group = 'org.gradle'

usePlugin('osgi')

dependencies {
    addMavenRepo()

    addConfiguration('bundleClasspath')

    bundleClasspath "org.apache.ant:ant:1.7.0@jar",
                    "org.slf4j:slf4j-api:1.5.3@jar",
                    "ch.qos.logback:logback-core:0.9.9@jar",
                    "ch.qos.logback:logback-classic:0.9.9@jar",
                    "net.sf.jopt-simple:jopt-simple:2.4.1@jar",
                    "commons-io:commons-io:1.4@jar",
                    "commons-lang:commons-lang:2.3@jar",
                    "slide:webdavlib:2.0@jar",
                    "biz.aQute:bndlib:0.0.255@jar",
                    "org.apache.ivy:ivy:2.0.0-rc2@jar",
                    "org.apache.maven:maven-ant-tasks:2.0.9@jar",
                    "org.apache.ant:ant-nodeps:1.7.0@jar",
                    "org.apache.ant:ant-trax:1.7.0@jar",
                    "junit:junit:4.4@jar",
                    "xml-apis:xml-apis:2.0.2@jar", "xerces:xercesImpl:2.9.1@jar","xalan:xalan:2.7.1@jar", "xalan:serializer:2.7.1@jar",
                    "org.apache.ant:ant-junit:1.7.0@jar",
                    "org.apache.ant:ant-launcher:1.7.0@jar",
                    "commons-codec:commons-codec:1.2@jar",
                    "javax.servlet:servlet-api:2.5@jar", "org.mortbay.jetty:jetty-naming:6.1.14@jar", "org.mortbay.jetty:jetty-annotations:6.1.14@jar"




    clientModule(['groovy', 'bundleClasspath'], "org.codehaus.groovy:groovy-all:1.5.6") {
        clientModule("org.apache.ant:ant:1.7.0") {
            dependencies("org.apache.ant:ant-junit:1.7.0@jar", "org.apache.ant:ant-launcher:1.7.0@jar")
        }
    }

    clientModule(['compile', 'bundleClasspath'], "commons-httpclient:commons-httpclient:3.0") {
        dependencies("commons-codec:commons-codec:1.2@jar")
    }

    // Needed by the eclipse plugin
    clientModule(['compile', 'bundleClasspath'], "dom4j:dom4j:1.6.1") {
        dependencies(
            "jaxen:jaxen:1.1-beta-6@jar",
            "jaxme:jaxme-api:0.3@jar",
            "msv:msv:20030807@jar",
            "pull-parser:pull-parser:2@jar",
            "msv:relaxngDatatype:20030807@jar",
            "xpp3:xpp3:1.1.3.3@jar",
            "msv:xsdlib:20030807@jar"
        )
    }

    clientModule(['compile', 'bundleClasspath'], "org.mortbay.jetty:jetty:6.1.14") {
        dependencies("javax.servlet:servlet-api:2.5@jar", "org.mortbay.jetty:jetty-naming:6.1.14@jar", "org.mortbay.jetty:jetty-annotations:6.1.14@jar")
    }
    compile "org.mortbay.jetty:jetty-plus:6.1.14@jar", "org.mortbay.jetty:jetty-util:6.1.14@jar", "javax.servlet:servlet-api:2.5@jar"
    bundleClasspath "org.mortbay.jetty:jetty-plus:6.1.14@jar", "org.mortbay.jetty:jetty-util:6.1.14@jar", "javax.servlet:servlet-api:2.5@jar"

    compile project(":command-line-api"),
            "org.apache.ant:ant:1.7.0@jar",
            "org.slf4j:slf4j-api:1.5.3@jar",
            "ch.qos.logback:logback-core:0.9.9@jar",
            "ch.qos.logback:logback-classic:0.9.9@jar",
            "net.sf.jopt-simple:jopt-simple:2.4.1@jar",
            "commons-io:commons-io:1.4@jar",
            "commons-lang:commons-lang:2.3@jar","org.apache.ant:ant-junit:1.7.0@jar",
            "slide:webdavlib:2.0@jar",
            "biz.aQute:bndlib:0.0.255@jar",
            "org.apache.ivy:ivy:2.0.0-rc2@jar",
            "org.apache.maven:maven-ant-tasks:2.0.9@jar",
            "org.apache.felix:org.apache.felix.framework:1.4.1"

    def FIRST_LEVEL_JMOCK = ['org.hamcrest:hamcrest-core:1.1@jar', 'org.hamcrest:hamcrest-library:1.1@jar', 'org.jmock:jmock-junit4:2.4.0@jar']
    testCompile "junit:junit:4.4@jar", FIRST_LEVEL_JMOCK
    clientModule(['testCompile'], "org.jmock:jmock:2.4.0") {
        dependencies('org.jmock:jmock-legacy:2.4.0@jar', 'org.objenesis:objenesis:1.0', 'cglib:cglib-nodep:2.1_3', FIRST_LEVEL_JMOCK)
    }
}

configure(project.archive_jar.osgi) {
    instruction 'Import-Package',
        'org.osgi.framework',
        'org.osgi.util.tracker',
        'org.gradle.commandline'

    instruction 'Export-Package', 'org.gradle.impl.bundle'
    instruction 'Bundle-Activator', 'org.gradle.DefaultGradleActivator'
    instruction 'Bundle-Vendor', 'gradle.org'
    instruction 'Bundle-Description', 'Gradle core bundle'
    instruction 'Bundle-DocURL', 'http://www.gradle.org'

    bundleClasspathFiles = dependencies.resolve('bundleClasspath') as File[]
    bundleClasspathFilenames = []
    bundleClasspathFiles.each() {
        bundleClasspathFilenames << it.getName()
    }
    bundleClasspathFilenames << '.'

    instruction 'Bundle-ClassPath', createPropertyStringFromList(bundleClasspathFilenames)
}

test {
    // We set forkmode to ONCE as our tests are written in Groovy and the startup time of Groovy is significant.
    options.fork(forkMode: ForkMode.ONCE, jvmArgs: ["-ea", "-Dgradle.home=roadToNowhere", '-Xms128m', '-Xmx1g'])
}

libs {
    jar(appendix: 'wrapper') {
        fileSet(dir: classesDir) {
            include 'org/gradle/wrapper/'
        }
        manifest.mainAttributes("Main-Class": 'org.gradle.wrapper.WrapperMain')
    }
}

archive_jar {
    files(dependencies.resolve('bundleClasspath') as File[])
    manifest.mainAttributes("Main-Class": "org.gradle.commandline.impl.DefaultGradleCommandLine")
}
