usePlugin('groovy');

sourceCompatibility = 1.5
targetCompatibility = 1.5
version = '0.6'
group = 'org.gradle'

usePlugin('osgi');

dependencies {
    addMavenStyleRepo('nexus', 'http://ironman:8080/nexus/content/repositories/central/', 'http://ironman:8080/nexus/content/repositories/central/')
    addFlatDirResolver('bundles', new File(rootDir, 'bundle'))

    addConfiguration('bundleClasspath')

    clientModule(['groovy', 'bundleClasspath'], "org.codehaus.groovy:groovy-all:1.5.6") {
        clientModule("org.apache.ant:ant:1.7.0") {
            dependencies("org.apache.ant:ant-junit:1.7.0@jar", "org.apache.ant:ant-launcher:1.7.0@jar")
        }
    }

	compile ":slf4j-osgi:1.0@jar",project(":command-line-api"),
            "org.slf4j:slf4j-api:1.5.3@jar",
            "net.sf.jopt-simple:jopt-simple:2.4.1@jar",
            "commons-io:commons-io:1.4@jar",
            "commons-lang:commons-lang:2.3@jar",
			"org.apache.ivy:ivy:2.0.0-rc2@jar",
            "org.apache.maven:maven-ant-tasks:2.0.9@jar",
            "org.apache.felix:org.apache.felix.framework:1.4.1"

    bundleClasspath "net.sf.jopt-simple:jopt-simple:2.4.1@jar",
                    "commons-io:commons-io:1.4@jar",
                    "commons-lang:commons-lang:2.3@jar",
                    "org.apache.ivy:ivy:2.0.0-rc2@jar",
                    "org.apache.maven:maven-ant-tasks:2.0.9@jar"
}

configure(project.archive_jar.osgi) {
      instruction 'Import-Package',
        'org.osgi.framework',
        'org.slf4j'
      instruction 'Export-Package',
              'org.gradle',
              'org.gradle.api',
              'org.gradle.api.dependencies',
              'org.gradle.api.dependencies.maven',
              'org.gradle.api.execution',
              'org.gradle.api.initialization',
              'org.gradle.api.internal',
              'org.gradle.api.internal.dependencies',
              'org.gradle.api.internal.dependencies.ivy',
              'org.gradle.api.internal.dependencies.maven.deploy',
              'org.gradle.api.internal.project',
              'org.gradle.api.invocation',
              'org.gradle.api.logging',
              'org.gradle.api.plugins',
              'org.gradle.api.tasks',
              'org.gradle.configuration',
              'org.gradle.execution',
              'org.gradle.groovy.scripts',
              'org.gradle.initialization',
              'org.gradle.logging',
              'org.gradle.util'
      instruction 'Bundle-Activator', 'org.gradle.bundle.Activator'
      instruction 'Bundle-Vendor', 'gradle.org'
      instruction 'Bundle-Description', 'Gradle api bundle'
      instruction 'Bundle-DocURL', 'http://www.gradle.org'

      bundleClasspathFiles = dependencies.resolve('bundleClasspath') as File[]
    bundleClasspathFilenames = []
    bundleClasspathFiles.each() {
        bundleClasspathFilenames << it.getName()
    }
    bundleClasspathFilenames << '.'

    instruction 'Bundle-ClassPath', createPropertyStringFromList(bundleClasspathFilenames)
}

archive_jar {
    files(dependencies.resolve('bundleClasspath') as File[])
}


