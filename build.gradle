import groovy.text.SimpleTemplateEngine
import java.text.DateFormat
import java.text.SimpleDateFormat
import java.util.jar.Attributes
import org.apache.tools.ant.taskdefs.condition.Os
import org.gradle.api.Task
import org.gradle.api.internal.dependencies.WebdavResolver
import org.gradle.api.tasks.StopExecutionException
import org.gradle.api.tasks.testing.ForkMode
import org.gradle.api.tasks.wrapper.Wrapper
import org.gradle.build.integtests.IntegTestSuite
import org.gradle.build.release.Svn
import org.gradle.build.release.Version
import org.gradle.build.samples.WrapperProjectCreator
import org.gradle.build.startscripts.StartScriptsGenerator
import org.gradle.util.GradleVersion

/**
 * For building Gradle you usually don't need to specify any properties. Only certain functionality of the Gradle requires
 * setting certain properties. Those properties can be set in the gradle.properties file in the the gradle user home. The
 * following properties can be set:
 *
 * Uploading distributions to Gradle's release and snapshot repository at codehaus: codehausUserName, codehausUserPassword
 * Uploading the userguide and the javadoc to Gradle's website: websiteFtpUserName, websiteFtpUserPassword
 * Using the build to create a new distribution and install it on the local machine: gradle_installDir, gradle_installDirName
 * Creating a JDK-1.4 compatible distribtution with retro-translator: gradle_retroLibsDir (This dir shoud contain rt.jar, jce.jar and jsse.jar from
 * a JDK 1.4).
 */

archivesBaseName = 'gradle'

usePlugin('groovy')

sourceCompatibility = 1.5
targetCompatibility = 1.5
version = '0.6'
group = 'org.gradle'

usePlugin('osgi');

dependencies {
    addMavenStyleRepo('nexus', 'http://ironman:8080/nexus/content/repositories/central/', 'http://ironman:8080/nexus/content/repositories/central/')
	addFlatDirResolver('bootstrap',new File(rootDir, 'bootstrap/build'));
    // todo: Improve dependency handling for xUnit jars
    addConfiguration('distLib') {
        visible = false
        extendsFrom 'default'
    }
    addConfiguration('ftpAntTask')
    addConfiguration('retrotranslatorAntTask')
    addConfiguration('testngIntegrationTesting')

    clientModule(['ftpAntTask'], "org.apache.ant:ant-commons-net:1.7.0") {
        clientModule("commons-net:commons-net:1.4.1") {
            dependencies("oro:oro:2.0.8@jar")
        }
    }

    retrotranslatorAntTask 'net.sf.retrotranslator:retrotranslator-runtime:1.2.7@jar', 'net.sf.retrotranslator:retrotranslator-transformer:1.2.7@jar',
            'backport-util-concurrent:backport-util-concurrent:3.1@jar'

    clientModule(['groovy'], "org.codehaus.groovy:groovy-all:1.5.6") {
        clientModule("org.apache.ant:ant:1.7.0") {
            dependencies(":ant-junit:1.7.0@jar", ":ant-launcher:1.7.0@jar")
        }
    }

    clientModule(['compile'], "commons-httpclient:commons-httpclient:3.0") {
        dependencies("commons-codec:commons-codec:1.2@jar", "org.slf4j:jcl-over-slf4j:1.5.3@jar")
    }

    // Needed by the eclipse plugin
    clientModule(['compile'], "dom4j:dom4j:1.6.1") {
        dependencies("jaxen:jaxen:1.1@jar")
    }

    runtime("org.apache.ant:ant-junit:1.7.0@jar")

    clientModule(['compile'], "org.mortbay.jetty:jetty:6.1.14") {
        dependencies("javax.servlet:servlet-api:2.5@jar", "org.mortbay.jetty:jetty-naming:6.1.14@jar", "org.mortbay.jetty:jetty-annotations:6.1.14@jar")
    }
    compile "org.mortbay.jetty:jetty-plus:6.1.14@jar", "org.mortbay.jetty:jetty-util:6.1.14@jar", "javax.servlet:servlet-api:2.5@jar"

    compile "net.sf.jopt-simple:jopt-simple:2.4.1@jar",
            "org.apache.ant:ant:1.7.0@jar",
            "ch.qos.logback:logback-classic:0.9.9@jar",
            "org.slf4j:slf4j-api:1.5.3@jar",
            "ch.qos.logback:logback-core:0.9.9@jar",
            "commons-io:commons-io:1.4@jar",
            "commons-lang:commons-lang:2.3@jar",
            "slide:webdavlib:2.0@jar",
            "biz.aQute:bndlib:0.0.255@jar",
            "org.apache.ivy:ivy:2.0.0-rc2@jar",
            "org.apache.maven:maven-ant-tasks:2.0.9@jar",
            "org.apache.felix:org.apache.felix.framework:1.4.1",
			":gradle-bootstrap:0.6@jar"
    
    runtime "org.apache.ant:ant-launcher:1.7.0@jar",
            "org.apache.ant:ant-nodeps:1.7.0@jar",
            "org.apache.ant:ant-trax:1.7.0@jar",
            "junit:junit:4.4@jar"

    def FIRST_LEVEL_JMOCK = ['org.hamcrest:hamcrest-core:1.1@jar', 'org.hamcrest:hamcrest-library:1.1@jar', 'org.jmock:jmock-junit4:2.4.0@jar']
    testCompile "junit:junit:4.4@jar", FIRST_LEVEL_JMOCK
    clientModule(['testCompile'], "org.jmock:jmock:2.4.0") {
        dependencies('org.jmock:jmock-legacy:2.4.0@jar', 'org.objenesis:objenesis:1.0', 'cglib:cglib-nodep:2.1_3', FIRST_LEVEL_JMOCK)
    }
    distLib "junit:junit:4.4@jar"
    clientModule(['testngIntegrationTesting'],'testng:testng:5.8') {
		addArtifact(new Artifact('testng','jar','jar','jdk15', "http://repo2.maven.org/maven2/org/testng/testng/5.8/testng-5.8-jdk15.jar"))
		addArtifact(new Artifact('testng','jar','jar','jdk14', "http://repo2.maven.org/maven2/org/testng/testng/5.8/testng-5.8-jdk14.jar"))
	}
    testngIntegrationTesting "org.codehaus.groovy:groovy-all:1.5.6"
}







